---
import type { FixtureType } from '../../data/fixtureType';
import { formatDate, getRandomColorClass } from './utils';

interface Props {
  child: FixtureType;
  index: number;
}

const { child, index } = Astro.props;
---

<div class="child-card bg-gradient-to-br from-gray-50 to-white rounded-lg border border-gray-200 p-4 hover:shadow-lg transition-all duration-200 hover:scale-105">
  <div class="flex items-start justify-between mb-3">
    <div class="flex items-center space-x-3 min-w-0 flex-1">
      <div class="flex-shrink-0 w-8 h-8 rounded-full flex items-center justify-center text-white text-sm font-bold ${getRandomColorClass()}">
        {child.name.charAt(0).toUpperCase()}
      </div>
      <div class="min-w-0 flex-1">
        <h3 class="text-sm font-semibold text-gray-900 leading-tight break-words">
          {child.name}
        </h3>
        <div class="flex items-center space-x-1 mt-1">
          <span class="inline-flex items-center px-1.5 py-0.5 rounded-full text-xs font-medium bg-gray-100 text-gray-600">
            #{child.id}
          </span>
        </div>
      </div>
    </div>
    <div class="text-right flex-shrink-0 ml-2">
      <div class="text-xs text-gray-500">Created</div>
      <div class="text-xs font-medium text-gray-900">{formatDate(child.createdAt)}</div>
    </div>
  </div>
  
  <div class="mb-3">
    <p class="text-xs text-gray-600 leading-relaxed line-clamp-3 break-words">
      {child.description}
    </p>
  </div>
  
  <div class="flex items-center justify-between text-xs text-gray-500">
    <span class="truncate">Updated: {formatDate(child.updatedAt)}</span>
    <span class="flex items-center flex-shrink-0 ml-2">
      <svg class="w-3 h-3 mr-1 flex-shrink-0" fill="none" stroke="currentColor" viewBox="0 0 24 24">
        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M17 20h5v-2a3 3 0 00-5.356-1.857M17 20H7m10 0v-2c0-.656-.126-1.283-.356-1.857M7 20H2v-2a3 3 0 015.356-1.857M7 20v-2c0-.656.126-1.283.356-1.857m0 0a5.002 5.002 0 019.288 0M15 7a3 3 0 11-6 0 3 3 0 016 0zm6 3a2 2 0 11-4 0 2 2 0 014 0zM7 10a2 2 0 11-4 0 2 2 0 014 0z"></path>
      </svg>
      {child.children.length} children
    </span>
  </div>
</div>

<style>
  .line-clamp-3 {
    display: -webkit-box;
    -webkit-line-clamp: 3;
    -webkit-box-orient: vertical;
    overflow: hidden;
  }
  
  .hover\:scale-105:hover {
    transform: scale(1.05);
  }
  
  .transition-all {
    transition-property: all;
    transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
    transition-duration: 200ms;
  }
  
  .duration-200 {
    transition-duration: 200ms;
  }
  
  .break-words {
    word-wrap: break-word;
    word-break: break-word;
    overflow-wrap: break-word;
  }
  
  .truncate {
    overflow: hidden;
    text-overflow: ellipsis;
    white-space: nowrap;
  }
</style>
