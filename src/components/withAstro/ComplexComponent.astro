---
import type { FixtureType } from '../../data/fixtureType';

interface Props {
  fixture: FixtureType;
}

const { fixture } = Astro.props;

// Helper function to format date
function formatDate(dateString: string): string {
  const date = new Date(dateString);
  return date.toLocaleDateString('en-US', {
    year: 'numeric',
    month: 'long',
    day: 'numeric',
    hour: '2-digit',
    minute: '2-digit'
  });
}

// Helper function to get random color class
function getRandomColorClass(): string {
  const colors = [
    'bg-blue-50 border-blue-200 text-blue-800',
    'bg-green-50 border-green-200 text-green-800',
    'bg-purple-50 border-purple-200 text-purple-800',
    'bg-yellow-50 border-yellow-200 text-yellow-800',
    'bg-red-50 border-red-200 text-red-800'
  ];
  return colors[Math.floor(Math.random() * colors.length)];
}
---

<div class="fixture-container max-w-6xl mx-auto p-6 space-y-8">
  <!-- Main Fixture Header -->
  <div class="fixture-header bg-white rounded-lg shadow-lg border border-gray-200 p-6 hover:shadow-xl transition-all duration-300">
    <div class="flex items-center justify-between mb-4">
      <div class="flex items-center space-x-4">
        <div class="w-12 h-12 bg-gradient-to-br from-blue-500 to-purple-600 rounded-full flex items-center justify-center text-white font-bold text-lg">
          {fixture.name.charAt(0).toUpperCase()}
        </div>
        <div>
          <h1 class="text-3xl font-bold text-gray-900 leading-tight">
            {fixture.name}
          </h1>
          <div class="flex items-center space-x-2 mt-1">
            <span class="inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium bg-blue-100 text-blue-800">
              ID: {fixture.id}
            </span>
            <span class="inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium bg-green-100 text-green-800">
              Active
            </span>
          </div>
        </div>
      </div>
      <div class="text-right">
        <div class="text-sm text-gray-500">Created</div>
        <div class="text-lg font-semibold text-gray-900">{formatDate(fixture.createdAt)}</div>
      </div>
    </div>
  </div>
  
  <!-- Main Fixture Description -->
  <div class="fixture-description bg-white rounded-lg shadow-md border border-gray-200 p-6 mb-6">
    <div class="flex items-center mb-4">
      <svg class="w-6 h-6 text-gray-600 mr-3" fill="none" stroke="currentColor" viewBox="0 0 24 24">
        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 12h6m-6 4h6m2 5H7a2 2 0 01-2-2V5a2 2 0 012-2h5.586a1 1 0 01.707.293l5.414 5.414a1 1 0 01.293.707V19a2 2 0 01-2 2z"></path>
      </svg>
      <h2 class="text-xl font-semibold text-gray-900">Description</h2>
    </div>
    <div class="prose max-w-none">
      <p class="text-gray-700 leading-relaxed text-lg">
        {fixture.description}
      </p>
      <div class="mt-4 flex flex-wrap gap-2">
        {fixture.description.split(' ').slice(0, 8).map((word, index) => (
          <span class={`inline-flex items-center px-3 py-1 rounded-full text-sm font-medium ${getRandomColorClass()}`}>
            {word}
          </span>
        ))}
      </div>
    </div>
  </div>
  
  <!-- Main Fixture Metadata -->
  <div class="fixture-metadata bg-white rounded-lg shadow-md border border-gray-200 p-6 mb-6">
    <div class="grid grid-cols-1 md:grid-cols-3 gap-6">
      <div class="metadata-item">
        <div class="flex items-center mb-2">
          <svg class="w-5 h-5 text-gray-500 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M8 7V3m8 4V3m-9 8h10M5 21h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v12a2 2 0 002 2z"></path>
          </svg>
          <span class="text-sm font-medium text-gray-700">Created At</span>
        </div>
        <div class="text-lg font-semibold text-gray-900">{formatDate(fixture.createdAt)}</div>
      </div>
      
      <div class="metadata-item">
        <div class="flex items-center mb-2">
          <svg class="w-5 h-5 text-gray-500 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 8v4l3 3m6-3a9 9 0 11-18 0 9 9 0 0118 0z"></path>
          </svg>
          <span class="text-sm font-medium text-gray-700">Updated At</span>
        </div>
        <div class="text-lg font-semibold text-gray-900">{formatDate(fixture.updatedAt)}</div>
      </div>
      
      <div class="metadata-item">
        <div class="flex items-center mb-2">
          <svg class="w-5 h-5 text-gray-500 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M17 20h5v-2a3 3 0 00-5.356-1.857M17 20H7m10 0v-2c0-.656-.126-1.283-.356-1.857M7 20H2v-2a3 3 0 015.356-1.857M7 20v-2c0-.656.126-1.283.356-1.857m0 0a5.002 5.002 0 019.288 0M15 7a3 3 0 11-6 0 3 3 0 016 0zm6 3a2 2 0 11-4 0 2 2 0 014 0zM7 10a2 2 0 11-4 0 2 2 0 014 0z"></path>
          </svg>
          <span class="text-sm font-medium text-gray-700">Children Count</span>
        </div>
        <div class="text-lg font-semibold text-gray-900">{fixture.children.length}</div>
      </div>
    </div>
  </div>
  
  <!-- Children Section -->
  <div class="fixture-children bg-white rounded-lg shadow-md border border-gray-200 p-6">
    <div class="flex items-center mb-6">
      <svg class="w-6 h-6 text-gray-600 mr-3" fill="none" stroke="currentColor" viewBox="0 0 24 24">
        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 11H5m14 0a2 2 0 012 2v6a2 2 0 01-2 2H5a2 2 0 01-2-2v-6a2 2 0 012-2m14 0V9a2 2 0 00-2-2M5 11V9a2 2 0 012-2m0 0V5a2 2 0 012-2h6a2 2 0 012 2v2M7 7h10"></path>
      </svg>
      <h2 class="text-xl font-semibold text-gray-900">Child Items</h2>
      <span class="ml-3 inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium bg-gray-100 text-gray-800">
        {fixture.children.length} items
      </span>
    </div>
    
    {fixture.children.length > 0 ? (
      <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6">
        {fixture.children.map((child, index) => (
          <div class="child-card bg-gradient-to-br from-gray-50 to-white rounded-lg border border-gray-200 p-4 hover:shadow-lg transition-all duration-200 hover:scale-105">
            <div class="flex items-start justify-between mb-3">
              <div class="flex items-center space-x-3">
                <div class={`w-8 h-8 rounded-full flex items-center justify-center text-white text-sm font-bold ${getRandomColorClass()}`}>
                  {child.name.charAt(0).toUpperCase()}
                </div>
                <div>
                  <h3 class="text-sm font-semibold text-gray-900 leading-tight">
                    {child.name}
                  </h3>
                  <div class="flex items-center space-x-1 mt-1">
                    <span class="inline-flex items-center px-1.5 py-0.5 rounded-full text-xs font-medium bg-gray-100 text-gray-600">
                      #{child.id}
                    </span>
                  </div>
                </div>
              </div>
              <div class="text-right">
                <div class="text-xs text-gray-500">Created</div>
                <div class="text-xs font-medium text-gray-900">{formatDate(child.createdAt)}</div>
              </div>
            </div>
            
            <div class="mb-3">
              <p class="text-xs text-gray-600 leading-relaxed line-clamp-3">
                {child.description}
              </p>
            </div>
            
            <div class="flex items-center justify-between text-xs text-gray-500">
              <span>Updated: {formatDate(child.updatedAt)}</span>
              <span class="flex items-center">
                <svg class="w-3 h-3 mr-1" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M17 20h5v-2a3 3 0 00-5.356-1.857M17 20H7m10 0v-2c0-.656-.126-1.283-.356-1.857M7 20H2v-2a3 3 0 015.356-1.857M7 20v-2c0-.656.126-1.283.356-1.857m0 0a5.002 5.002 0 019.288 0M15 7a3 3 0 11-6 0 3 3 0 016 0zm6 3a2 2 0 11-4 0 2 2 0 014 0zM7 10a2 2 0 11-4 0 2 2 0 014 0z"></path>
                </svg>
                {child.children.length} children
              </span>
            </div>
          </div>
        ))}
      </div>
    ) : (
      <div class="text-center py-12">
        <svg class="mx-auto h-12 w-12 text-gray-400" fill="none" stroke="currentColor" viewBox="0 0 24 24">
          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M20 13V6a2 2 0 00-2-2H6a2 2 0 00-2 2v7m16 0v5a2 2 0 01-2 2H6a2 2 0 01-2-2v-5m16 0h-2.586a1 1 0 00-.707.293l-2.414 2.414a1 1 0 01-.707.293h-3.172a1 1 0 01-.707-.293l-2.414-2.414A1 1 0 006.586 13H4"></path>
        </svg>
        <h3 class="mt-2 text-sm font-medium text-gray-900">No children</h3>
        <p class="mt-1 text-sm text-gray-500">This fixture has no child items.</p>
      </div>
    )}
  </div>
</div>

<style>
  .fixture-container {
    font-family: 'Inter', -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif;
  }
  
  .line-clamp-3 {
    display: -webkit-box;
    -webkit-line-clamp: 3;
    -webkit-box-orient: vertical;
    overflow: hidden;
  }
  
  .hover\:scale-105:hover {
    transform: scale(1.05);
  }
  
  .transition-all {
    transition-property: all;
    transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
    transition-duration: 200ms;
  }
  
  .duration-200 {
    transition-duration: 200ms;
  }
  
  .duration-300 {
    transition-duration: 300ms;
  }
</style>
